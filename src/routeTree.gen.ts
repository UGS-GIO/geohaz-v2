/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as HazardsIndexRouteImport } from './routes/hazards/index'
import { Route as HazardsReviewIndexRouteImport } from './routes/hazards-review/index'
import { Route as GeophysicsIndexRouteImport } from './routes/geophysics/index'
import { Route as CarbonstorageIndexRouteImport } from './routes/carbonstorage/index'
import { Route as HazardsReportNewreportIndexRouteImport } from './routes/hazards/report/newreport/index'

const WetlandsIndexLazyRouteImport = createFileRoute('/wetlands/')()
const MineralsIndexLazyRouteImport = createFileRoute('/minerals/')()
const HazardsReportAoiLazyRouteImport = createFileRoute(
  '/hazards/report/$aoi',
)()
const HazardsReviewReportNewreportLazyRouteImport = createFileRoute(
  '/hazards-review/report/newreport',
)()
const HazardsReviewReportAoiLazyRouteImport = createFileRoute(
  '/hazards-review/report/$aoi',
)()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WetlandsIndexLazyRoute = WetlandsIndexLazyRouteImport.update({
  id: '/wetlands/',
  path: '/wetlands/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/wetlands/index.lazy').then((d) => d.Route),
)
const MineralsIndexLazyRoute = MineralsIndexLazyRouteImport.update({
  id: '/minerals/',
  path: '/minerals/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/minerals/index.lazy').then((d) => d.Route),
)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const HazardsIndexRoute = HazardsIndexRouteImport.update({
  id: '/hazards/',
  path: '/hazards/',
  getParentRoute: () => rootRouteImport,
} as any)
const HazardsReviewIndexRoute = HazardsReviewIndexRouteImport.update({
  id: '/hazards-review/',
  path: '/hazards-review/',
  getParentRoute: () => rootRouteImport,
} as any)
const GeophysicsIndexRoute = GeophysicsIndexRouteImport.update({
  id: '/geophysics/',
  path: '/geophysics/',
  getParentRoute: () => rootRouteImport,
} as any)
const CarbonstorageIndexRoute = CarbonstorageIndexRouteImport.update({
  id: '/carbonstorage/',
  path: '/carbonstorage/',
  getParentRoute: () => rootRouteImport,
} as any)
const HazardsReportAoiLazyRoute = HazardsReportAoiLazyRouteImport.update({
  id: '/hazards/report/$aoi',
  path: '/hazards/report/$aoi',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/hazards/report/$aoi.lazy').then((d) => d.Route),
)
const HazardsReviewReportNewreportLazyRoute =
  HazardsReviewReportNewreportLazyRouteImport.update({
    id: '/hazards-review/report/newreport',
    path: '/hazards-review/report/newreport',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/hazards-review/report/newreport.lazy').then(
      (d) => d.Route,
    ),
  )
const HazardsReviewReportAoiLazyRoute =
  HazardsReviewReportAoiLazyRouteImport.update({
    id: '/hazards-review/report/$aoi',
    path: '/hazards-review/report/$aoi',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/hazards-review/report/$aoi.lazy').then((d) => d.Route),
  )
const HazardsReportNewreportIndexRoute =
  HazardsReportNewreportIndexRouteImport.update({
    id: '/hazards/report/newreport/',
    path: '/hazards/report/newreport/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/carbonstorage': typeof CarbonstorageIndexRoute
  '/geophysics': typeof GeophysicsIndexRoute
  '/hazards-review': typeof HazardsReviewIndexRoute
  '/hazards': typeof HazardsIndexRoute
  '/login': typeof LoginIndexRoute
  '/minerals': typeof MineralsIndexLazyRoute
  '/wetlands': typeof WetlandsIndexLazyRoute
  '/hazards-review/report/$aoi': typeof HazardsReviewReportAoiLazyRoute
  '/hazards-review/report/newreport': typeof HazardsReviewReportNewreportLazyRoute
  '/hazards/report/$aoi': typeof HazardsReportAoiLazyRoute
  '/hazards/report/newreport': typeof HazardsReportNewreportIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/carbonstorage': typeof CarbonstorageIndexRoute
  '/geophysics': typeof GeophysicsIndexRoute
  '/hazards-review': typeof HazardsReviewIndexRoute
  '/hazards': typeof HazardsIndexRoute
  '/login': typeof LoginIndexRoute
  '/minerals': typeof MineralsIndexLazyRoute
  '/wetlands': typeof WetlandsIndexLazyRoute
  '/hazards-review/report/$aoi': typeof HazardsReviewReportAoiLazyRoute
  '/hazards-review/report/newreport': typeof HazardsReviewReportNewreportLazyRoute
  '/hazards/report/$aoi': typeof HazardsReportAoiLazyRoute
  '/hazards/report/newreport': typeof HazardsReportNewreportIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/carbonstorage/': typeof CarbonstorageIndexRoute
  '/geophysics/': typeof GeophysicsIndexRoute
  '/hazards-review/': typeof HazardsReviewIndexRoute
  '/hazards/': typeof HazardsIndexRoute
  '/login/': typeof LoginIndexRoute
  '/minerals/': typeof MineralsIndexLazyRoute
  '/wetlands/': typeof WetlandsIndexLazyRoute
  '/hazards-review/report/$aoi': typeof HazardsReviewReportAoiLazyRoute
  '/hazards-review/report/newreport': typeof HazardsReviewReportNewreportLazyRoute
  '/hazards/report/$aoi': typeof HazardsReportAoiLazyRoute
  '/hazards/report/newreport/': typeof HazardsReportNewreportIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/carbonstorage'
    | '/geophysics'
    | '/hazards-review'
    | '/hazards'
    | '/login'
    | '/minerals'
    | '/wetlands'
    | '/hazards-review/report/$aoi'
    | '/hazards-review/report/newreport'
    | '/hazards/report/$aoi'
    | '/hazards/report/newreport'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/carbonstorage'
    | '/geophysics'
    | '/hazards-review'
    | '/hazards'
    | '/login'
    | '/minerals'
    | '/wetlands'
    | '/hazards-review/report/$aoi'
    | '/hazards-review/report/newreport'
    | '/hazards/report/$aoi'
    | '/hazards/report/newreport'
  id:
    | '__root__'
    | '/'
    | '/carbonstorage/'
    | '/geophysics/'
    | '/hazards-review/'
    | '/hazards/'
    | '/login/'
    | '/minerals/'
    | '/wetlands/'
    | '/hazards-review/report/$aoi'
    | '/hazards-review/report/newreport'
    | '/hazards/report/$aoi'
    | '/hazards/report/newreport/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CarbonstorageIndexRoute: typeof CarbonstorageIndexRoute
  GeophysicsIndexRoute: typeof GeophysicsIndexRoute
  HazardsReviewIndexRoute: typeof HazardsReviewIndexRoute
  HazardsIndexRoute: typeof HazardsIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  MineralsIndexLazyRoute: typeof MineralsIndexLazyRoute
  WetlandsIndexLazyRoute: typeof WetlandsIndexLazyRoute
  HazardsReviewReportAoiLazyRoute: typeof HazardsReviewReportAoiLazyRoute
  HazardsReviewReportNewreportLazyRoute: typeof HazardsReviewReportNewreportLazyRoute
  HazardsReportAoiLazyRoute: typeof HazardsReportAoiLazyRoute
  HazardsReportNewreportIndexRoute: typeof HazardsReportNewreportIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wetlands/': {
      id: '/wetlands/'
      path: '/wetlands'
      fullPath: '/wetlands'
      preLoaderRoute: typeof WetlandsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/minerals/': {
      id: '/minerals/'
      path: '/minerals'
      fullPath: '/minerals'
      preLoaderRoute: typeof MineralsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hazards/': {
      id: '/hazards/'
      path: '/hazards'
      fullPath: '/hazards'
      preLoaderRoute: typeof HazardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hazards-review/': {
      id: '/hazards-review/'
      path: '/hazards-review'
      fullPath: '/hazards-review'
      preLoaderRoute: typeof HazardsReviewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/geophysics/': {
      id: '/geophysics/'
      path: '/geophysics'
      fullPath: '/geophysics'
      preLoaderRoute: typeof GeophysicsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/carbonstorage/': {
      id: '/carbonstorage/'
      path: '/carbonstorage'
      fullPath: '/carbonstorage'
      preLoaderRoute: typeof CarbonstorageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hazards/report/$aoi': {
      id: '/hazards/report/$aoi'
      path: '/hazards/report/$aoi'
      fullPath: '/hazards/report/$aoi'
      preLoaderRoute: typeof HazardsReportAoiLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hazards-review/report/newreport': {
      id: '/hazards-review/report/newreport'
      path: '/hazards-review/report/newreport'
      fullPath: '/hazards-review/report/newreport'
      preLoaderRoute: typeof HazardsReviewReportNewreportLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hazards-review/report/$aoi': {
      id: '/hazards-review/report/$aoi'
      path: '/hazards-review/report/$aoi'
      fullPath: '/hazards-review/report/$aoi'
      preLoaderRoute: typeof HazardsReviewReportAoiLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hazards/report/newreport/': {
      id: '/hazards/report/newreport/'
      path: '/hazards/report/newreport'
      fullPath: '/hazards/report/newreport'
      preLoaderRoute: typeof HazardsReportNewreportIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CarbonstorageIndexRoute: CarbonstorageIndexRoute,
  GeophysicsIndexRoute: GeophysicsIndexRoute,
  HazardsReviewIndexRoute: HazardsReviewIndexRoute,
  HazardsIndexRoute: HazardsIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  MineralsIndexLazyRoute: MineralsIndexLazyRoute,
  WetlandsIndexLazyRoute: WetlandsIndexLazyRoute,
  HazardsReviewReportAoiLazyRoute: HazardsReviewReportAoiLazyRoute,
  HazardsReviewReportNewreportLazyRoute: HazardsReviewReportNewreportLazyRoute,
  HazardsReportAoiLazyRoute: HazardsReportAoiLazyRoute,
  HazardsReportNewreportIndexRoute: HazardsReportNewreportIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
