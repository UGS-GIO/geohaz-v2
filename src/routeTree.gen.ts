/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MapRouteImport } from './routes/_map'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as MapHazardsIndexRouteImport } from './routes/_map/hazards/index'
import { Route as MapHazardsReviewIndexRouteImport } from './routes/_map/hazards-review/index'
import { Route as MapGeophysicsIndexRouteImport } from './routes/_map/geophysics/index'
import { Route as MapCarbonstorageIndexRouteImport } from './routes/_map/carbonstorage/index'

const MapWetlandsIndexLazyRouteImport = createFileRoute('/_map/wetlands/')()
const MapMineralsIndexLazyRouteImport = createFileRoute('/_map/minerals/')()
const MapHazardsReportAoiLazyRouteImport = createFileRoute(
  '/_map/hazards/report/$aoi',
)()
const MapHazardsReviewReportNewreportLazyRouteImport = createFileRoute(
  '/_map/hazards-review/report/newreport',
)()
const MapHazardsReviewReportAoiLazyRouteImport = createFileRoute(
  '/_map/hazards-review/report/$aoi',
)()
const MapHazardsReportNewreportIndexLazyRouteImport = createFileRoute(
  '/_map/hazards/report/newreport/',
)()

const MapRoute = MapRouteImport.update({
  id: '/_map',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const MapWetlandsIndexLazyRoute = MapWetlandsIndexLazyRouteImport.update({
  id: '/wetlands/',
  path: '/wetlands/',
  getParentRoute: () => MapRoute,
} as any).lazy(() =>
  import('./routes/_map/wetlands/index.lazy').then((d) => d.Route),
)
const MapMineralsIndexLazyRoute = MapMineralsIndexLazyRouteImport.update({
  id: '/minerals/',
  path: '/minerals/',
  getParentRoute: () => MapRoute,
} as any).lazy(() =>
  import('./routes/_map/minerals/index.lazy').then((d) => d.Route),
)
const MapHazardsIndexRoute = MapHazardsIndexRouteImport.update({
  id: '/hazards/',
  path: '/hazards/',
  getParentRoute: () => MapRoute,
} as any)
const MapHazardsReviewIndexRoute = MapHazardsReviewIndexRouteImport.update({
  id: '/hazards-review/',
  path: '/hazards-review/',
  getParentRoute: () => MapRoute,
} as any)
const MapGeophysicsIndexRoute = MapGeophysicsIndexRouteImport.update({
  id: '/geophysics/',
  path: '/geophysics/',
  getParentRoute: () => MapRoute,
} as any)
const MapCarbonstorageIndexRoute = MapCarbonstorageIndexRouteImport.update({
  id: '/carbonstorage/',
  path: '/carbonstorage/',
  getParentRoute: () => MapRoute,
} as any)
const MapHazardsReportAoiLazyRoute = MapHazardsReportAoiLazyRouteImport.update({
  id: '/hazards/report/$aoi',
  path: '/hazards/report/$aoi',
  getParentRoute: () => MapRoute,
} as any).lazy(() =>
  import('./routes/_map/hazards/report/$aoi.lazy').then((d) => d.Route),
)
const MapHazardsReviewReportNewreportLazyRoute =
  MapHazardsReviewReportNewreportLazyRouteImport.update({
    id: '/hazards-review/report/newreport',
    path: '/hazards-review/report/newreport',
    getParentRoute: () => MapRoute,
  } as any).lazy(() =>
    import('./routes/_map/hazards-review/report/newreport.lazy').then(
      (d) => d.Route,
    ),
  )
const MapHazardsReviewReportAoiLazyRoute =
  MapHazardsReviewReportAoiLazyRouteImport.update({
    id: '/hazards-review/report/$aoi',
    path: '/hazards-review/report/$aoi',
    getParentRoute: () => MapRoute,
  } as any).lazy(() =>
    import('./routes/_map/hazards-review/report/$aoi.lazy').then(
      (d) => d.Route,
    ),
  )
const MapHazardsReportNewreportIndexLazyRoute =
  MapHazardsReportNewreportIndexLazyRouteImport.update({
    id: '/hazards/report/newreport/',
    path: '/hazards/report/newreport/',
    getParentRoute: () => MapRoute,
  } as any).lazy(() =>
    import('./routes/_map/hazards/report/newreport/index.lazy').then(
      (d) => d.Route,
    ),
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/carbonstorage': typeof MapCarbonstorageIndexRoute
  '/geophysics': typeof MapGeophysicsIndexRoute
  '/hazards-review': typeof MapHazardsReviewIndexRoute
  '/hazards': typeof MapHazardsIndexRoute
  '/minerals': typeof MapMineralsIndexLazyRoute
  '/wetlands': typeof MapWetlandsIndexLazyRoute
  '/hazards-review/report/$aoi': typeof MapHazardsReviewReportAoiLazyRoute
  '/hazards-review/report/newreport': typeof MapHazardsReviewReportNewreportLazyRoute
  '/hazards/report/$aoi': typeof MapHazardsReportAoiLazyRoute
  '/hazards/report/newreport': typeof MapHazardsReportNewreportIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/carbonstorage': typeof MapCarbonstorageIndexRoute
  '/geophysics': typeof MapGeophysicsIndexRoute
  '/hazards-review': typeof MapHazardsReviewIndexRoute
  '/hazards': typeof MapHazardsIndexRoute
  '/minerals': typeof MapMineralsIndexLazyRoute
  '/wetlands': typeof MapWetlandsIndexLazyRoute
  '/hazards-review/report/$aoi': typeof MapHazardsReviewReportAoiLazyRoute
  '/hazards-review/report/newreport': typeof MapHazardsReviewReportNewreportLazyRoute
  '/hazards/report/$aoi': typeof MapHazardsReportAoiLazyRoute
  '/hazards/report/newreport': typeof MapHazardsReportNewreportIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_map': typeof MapRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_map/carbonstorage/': typeof MapCarbonstorageIndexRoute
  '/_map/geophysics/': typeof MapGeophysicsIndexRoute
  '/_map/hazards-review/': typeof MapHazardsReviewIndexRoute
  '/_map/hazards/': typeof MapHazardsIndexRoute
  '/_map/minerals/': typeof MapMineralsIndexLazyRoute
  '/_map/wetlands/': typeof MapWetlandsIndexLazyRoute
  '/_map/hazards-review/report/$aoi': typeof MapHazardsReviewReportAoiLazyRoute
  '/_map/hazards-review/report/newreport': typeof MapHazardsReviewReportNewreportLazyRoute
  '/_map/hazards/report/$aoi': typeof MapHazardsReportAoiLazyRoute
  '/_map/hazards/report/newreport/': typeof MapHazardsReportNewreportIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/carbonstorage'
    | '/geophysics'
    | '/hazards-review'
    | '/hazards'
    | '/minerals'
    | '/wetlands'
    | '/hazards-review/report/$aoi'
    | '/hazards-review/report/newreport'
    | '/hazards/report/$aoi'
    | '/hazards/report/newreport'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/carbonstorage'
    | '/geophysics'
    | '/hazards-review'
    | '/hazards'
    | '/minerals'
    | '/wetlands'
    | '/hazards-review/report/$aoi'
    | '/hazards-review/report/newreport'
    | '/hazards/report/$aoi'
    | '/hazards/report/newreport'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_map'
    | '/_auth/login'
    | '/_map/carbonstorage/'
    | '/_map/geophysics/'
    | '/_map/hazards-review/'
    | '/_map/hazards/'
    | '/_map/minerals/'
    | '/_map/wetlands/'
    | '/_map/hazards-review/report/$aoi'
    | '/_map/hazards-review/report/newreport'
    | '/_map/hazards/report/$aoi'
    | '/_map/hazards/report/newreport/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  MapRoute: typeof MapRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_map': {
      id: '/_map'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_map/wetlands/': {
      id: '/_map/wetlands/'
      path: '/wetlands'
      fullPath: '/wetlands'
      preLoaderRoute: typeof MapWetlandsIndexLazyRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/minerals/': {
      id: '/_map/minerals/'
      path: '/minerals'
      fullPath: '/minerals'
      preLoaderRoute: typeof MapMineralsIndexLazyRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/hazards/': {
      id: '/_map/hazards/'
      path: '/hazards'
      fullPath: '/hazards'
      preLoaderRoute: typeof MapHazardsIndexRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/hazards-review/': {
      id: '/_map/hazards-review/'
      path: '/hazards-review'
      fullPath: '/hazards-review'
      preLoaderRoute: typeof MapHazardsReviewIndexRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/geophysics/': {
      id: '/_map/geophysics/'
      path: '/geophysics'
      fullPath: '/geophysics'
      preLoaderRoute: typeof MapGeophysicsIndexRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/carbonstorage/': {
      id: '/_map/carbonstorage/'
      path: '/carbonstorage'
      fullPath: '/carbonstorage'
      preLoaderRoute: typeof MapCarbonstorageIndexRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/hazards/report/$aoi': {
      id: '/_map/hazards/report/$aoi'
      path: '/hazards/report/$aoi'
      fullPath: '/hazards/report/$aoi'
      preLoaderRoute: typeof MapHazardsReportAoiLazyRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/hazards-review/report/newreport': {
      id: '/_map/hazards-review/report/newreport'
      path: '/hazards-review/report/newreport'
      fullPath: '/hazards-review/report/newreport'
      preLoaderRoute: typeof MapHazardsReviewReportNewreportLazyRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/hazards-review/report/$aoi': {
      id: '/_map/hazards-review/report/$aoi'
      path: '/hazards-review/report/$aoi'
      fullPath: '/hazards-review/report/$aoi'
      preLoaderRoute: typeof MapHazardsReviewReportAoiLazyRouteImport
      parentRoute: typeof MapRoute
    }
    '/_map/hazards/report/newreport/': {
      id: '/_map/hazards/report/newreport/'
      path: '/hazards/report/newreport'
      fullPath: '/hazards/report/newreport'
      preLoaderRoute: typeof MapHazardsReportNewreportIndexLazyRouteImport
      parentRoute: typeof MapRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MapRouteChildren {
  MapCarbonstorageIndexRoute: typeof MapCarbonstorageIndexRoute
  MapGeophysicsIndexRoute: typeof MapGeophysicsIndexRoute
  MapHazardsReviewIndexRoute: typeof MapHazardsReviewIndexRoute
  MapHazardsIndexRoute: typeof MapHazardsIndexRoute
  MapMineralsIndexLazyRoute: typeof MapMineralsIndexLazyRoute
  MapWetlandsIndexLazyRoute: typeof MapWetlandsIndexLazyRoute
  MapHazardsReviewReportAoiLazyRoute: typeof MapHazardsReviewReportAoiLazyRoute
  MapHazardsReviewReportNewreportLazyRoute: typeof MapHazardsReviewReportNewreportLazyRoute
  MapHazardsReportAoiLazyRoute: typeof MapHazardsReportAoiLazyRoute
  MapHazardsReportNewreportIndexLazyRoute: typeof MapHazardsReportNewreportIndexLazyRoute
}

const MapRouteChildren: MapRouteChildren = {
  MapCarbonstorageIndexRoute: MapCarbonstorageIndexRoute,
  MapGeophysicsIndexRoute: MapGeophysicsIndexRoute,
  MapHazardsReviewIndexRoute: MapHazardsReviewIndexRoute,
  MapHazardsIndexRoute: MapHazardsIndexRoute,
  MapMineralsIndexLazyRoute: MapMineralsIndexLazyRoute,
  MapWetlandsIndexLazyRoute: MapWetlandsIndexLazyRoute,
  MapHazardsReviewReportAoiLazyRoute: MapHazardsReviewReportAoiLazyRoute,
  MapHazardsReviewReportNewreportLazyRoute:
    MapHazardsReviewReportNewreportLazyRoute,
  MapHazardsReportAoiLazyRoute: MapHazardsReportAoiLazyRoute,
  MapHazardsReportNewreportIndexLazyRoute:
    MapHazardsReportNewreportIndexLazyRoute,
}

const MapRouteWithChildren = MapRoute._addFileChildren(MapRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  MapRoute: MapRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
