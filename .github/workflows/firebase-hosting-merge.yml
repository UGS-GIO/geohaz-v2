name: Deploy to Firebase Hosting and Release on merge
'on':
  push:
    branches:
      - master
      - develop

jobs:
  build_deploy_release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # Important for semantic-release to access all commits
      
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          cache: npm
          node-version: lts/*
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      # Global Release
      - name: Global Release
        if: github.ref == 'refs/heads/master' # only run release on master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      
      # App-specific releases
      - name: Hazards App Release
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --extends ./release-config-hazards.js
      
      - name: Minerals App Release
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --extends ./release-config-minerals.js
      
      - name: CCUS App Release
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --extends ./release-config-ccus.js
      
      # Firebase deployment
      - name: Set Firebase service account and project ID
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "FIREBASE_SERVICE_ACCOUNT=FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_MAPS_PROD" >> $GITHUB_ENV
            echo "PROJECT_ID=ut-dnr-ugs-maps-prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "FIREBASE_SERVICE_ACCOUNT=FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_MAPS_DEV" >> $GITHUB_ENV
            echo "PROJECT_ID=ut-dnr-ugs-maps-dev" >> $GITHUB_ENV
          fi
      
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets[env.FIREBASE_SERVICE_ACCOUNT] }}'
          channelId: live
          projectId: '${{ env.PROJECT_ID }}'