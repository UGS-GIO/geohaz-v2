name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - master
      - develop
jobs:
   release-please:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}

    steps:
      - name: ðŸš€ Create Release
        id: release-please
        uses: agrc/release-composite-action@v1
        with:
          prerelease: ${{ github.ref_name == 'dev' }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          github-app-id: ${{ secrets.UGRC_RELEASE_BOT_APP_ID }}
          github-app-key: ${{ secrets.UGRC_RELEASE_BOT_APP_KEY }}
          github-app-name: ${{ secrets.UGRC_RELEASE_BOT_NAME }}
          github-app-email: ${{ secrets.UGRC_RELEASE_BOT_EMAIL }}

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - uses: actions/checkout@v3
      - run: npm ci && npm run build
      - name: Set Firebase service account and project ID
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "FIREBASE_SERVICE_ACCOUNT=FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_HAZARDS_PROD" >> $GITHUB_ENV
            echo "PROJECT_ID=ut-dnr-ugs-hazards-prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "FIREBASE_SERVICE_ACCOUNT=FIREBASE_SERVICE_ACCOUNT_UT_DNR_UGS_HAZARDS_DEV" >> $GITHUB_ENV
            echo "PROJECT_ID=ut-dnr-ugs-hazards-dev" >> $GITHUB_ENV
          fi

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets[env.FIREBASE_SERVICE_ACCOUNT] }}'
          channelId: live
          projectId: '${{ env.PROJECT_ID }}'